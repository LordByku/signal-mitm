# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: storage.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rstorage.proto\x12\x14signal.proto.storage\"\xf8\x06\n\x10SessionStructure\x12\x17\n\x0fsession_version\x18\x01 \x01(\r\x12\x1d\n\x15local_identity_public\x18\x02 \x01(\x0c\x12\x1e\n\x16remote_identity_public\x18\x03 \x01(\x0c\x12\x10\n\x08root_key\x18\x04 \x01(\x0c\x12\x18\n\x10previous_counter\x18\x05 \x01(\r\x12\x42\n\x0csender_chain\x18\x06 \x01(\x0b\x32,.signal.proto.storage.SessionStructure.Chain\x12\x45\n\x0freceiver_chains\x18\x07 \x03(\x0b\x32,.signal.proto.storage.SessionStructure.Chain\x12M\n\x0fpending_pre_key\x18\t \x01(\x0b\x32\x34.signal.proto.storage.SessionStructure.PendingPreKey\x12\x1e\n\x16remote_registration_id\x18\n \x01(\r\x12\x1d\n\x15local_registration_id\x18\x0b \x01(\r\x12\x16\n\x0e\x61lice_base_key\x18\r \x01(\x0c\x1a\xd6\x02\n\x05\x43hain\x12\x1a\n\x12sender_ratchet_key\x18\x01 \x01(\x0c\x12\"\n\x1asender_ratchet_key_private\x18\x02 \x01(\x0c\x12H\n\tchain_key\x18\x03 \x01(\x0b\x32\x35.signal.proto.storage.SessionStructure.Chain.ChainKey\x12M\n\x0cmessage_keys\x18\x04 \x03(\x0b\x32\x37.signal.proto.storage.SessionStructure.Chain.MessageKey\x1a&\n\x08\x43hainKey\x12\r\n\x05index\x18\x01 \x01(\r\x12\x0b\n\x03key\x18\x02 \x01(\x0c\x1aL\n\nMessageKey\x12\r\n\x05index\x18\x01 \x01(\r\x12\x12\n\ncipher_key\x18\x02 \x01(\x0c\x12\x0f\n\x07mac_key\x18\x03 \x01(\x0c\x12\n\n\x02iv\x18\x04 \x01(\x0c\x1aP\n\rPendingPreKey\x12\x12\n\npre_key_id\x18\x01 \x01(\r\x12\x19\n\x11signed_pre_key_id\x18\x03 \x01(\x05\x12\x10\n\x08\x62\x61se_key\x18\x02 \x01(\x0cJ\x04\x08\x0c\x10\r\"m\n\x0fRecordStructure\x12?\n\x0f\x63urrent_session\x18\x01 \x01(\x0b\x32&.signal.proto.storage.SessionStructure\x12\x19\n\x11previous_sessions\x18\x02 \x03(\x0c\"L\n\x15PreKeyRecordStructure\x12\n\n\x02id\x18\x01 \x01(\r\x12\x12\n\npublic_key\x18\x02 \x01(\x0c\x12\x13\n\x0bprivate_key\x18\x03 \x01(\x0c\"x\n\x1bSignedPreKeyRecordStructure\x12\n\n\x02id\x18\x01 \x01(\r\x12\x12\n\npublic_key\x18\x02 \x01(\x0c\x12\x13\n\x0bprivate_key\x18\x03 \x01(\x0c\x12\x11\n\tsignature\x18\x04 \x01(\x0c\x12\x11\n\ttimestamp\x18\x05 \x01(\x06\"C\n\x18IdentityKeyPairStructure\x12\x12\n\npublic_key\x18\x01 \x01(\x0c\x12\x13\n\x0bprivate_key\x18\x02 \x01(\x0c\"\xf2\x03\n\x17SenderKeyStateStructure\x12\x17\n\x0fmessage_version\x18\x05 \x01(\r\x12\x10\n\x08\x63hain_id\x18\x01 \x01(\r\x12V\n\x10sender_chain_key\x18\x02 \x01(\x0b\x32<.signal.proto.storage.SenderKeyStateStructure.SenderChainKey\x12Z\n\x12sender_signing_key\x18\x03 \x01(\x0b\x32>.signal.proto.storage.SenderKeyStateStructure.SenderSigningKey\x12[\n\x13sender_message_keys\x18\x04 \x03(\x0b\x32>.signal.proto.storage.SenderKeyStateStructure.SenderMessageKey\x1a\x31\n\x0eSenderChainKey\x12\x11\n\titeration\x18\x01 \x01(\r\x12\x0c\n\x04seed\x18\x02 \x01(\x0c\x1a\x33\n\x10SenderMessageKey\x12\x11\n\titeration\x18\x01 \x01(\r\x12\x0c\n\x04seed\x18\x02 \x01(\x0c\x1a\x33\n\x10SenderSigningKey\x12\x0e\n\x06public\x18\x01 \x01(\x0c\x12\x0f\n\x07private\x18\x02 \x01(\x0c\"d\n\x18SenderKeyRecordStructure\x12H\n\x11sender_key_states\x18\x01 \x03(\x0b\x32-.signal.proto.storage.SenderKeyStateStructureb\x06proto3')



_SESSIONSTRUCTURE = DESCRIPTOR.message_types_by_name['SessionStructure']
_SESSIONSTRUCTURE_CHAIN = _SESSIONSTRUCTURE.nested_types_by_name['Chain']
_SESSIONSTRUCTURE_CHAIN_CHAINKEY = _SESSIONSTRUCTURE_CHAIN.nested_types_by_name['ChainKey']
_SESSIONSTRUCTURE_CHAIN_MESSAGEKEY = _SESSIONSTRUCTURE_CHAIN.nested_types_by_name['MessageKey']
_SESSIONSTRUCTURE_PENDINGPREKEY = _SESSIONSTRUCTURE.nested_types_by_name['PendingPreKey']
_RECORDSTRUCTURE = DESCRIPTOR.message_types_by_name['RecordStructure']
_PREKEYRECORDSTRUCTURE = DESCRIPTOR.message_types_by_name['PreKeyRecordStructure']
_SIGNEDPREKEYRECORDSTRUCTURE = DESCRIPTOR.message_types_by_name['SignedPreKeyRecordStructure']
_IDENTITYKEYPAIRSTRUCTURE = DESCRIPTOR.message_types_by_name['IdentityKeyPairStructure']
_SENDERKEYSTATESTRUCTURE = DESCRIPTOR.message_types_by_name['SenderKeyStateStructure']
_SENDERKEYSTATESTRUCTURE_SENDERCHAINKEY = _SENDERKEYSTATESTRUCTURE.nested_types_by_name['SenderChainKey']
_SENDERKEYSTATESTRUCTURE_SENDERMESSAGEKEY = _SENDERKEYSTATESTRUCTURE.nested_types_by_name['SenderMessageKey']
_SENDERKEYSTATESTRUCTURE_SENDERSIGNINGKEY = _SENDERKEYSTATESTRUCTURE.nested_types_by_name['SenderSigningKey']
_SENDERKEYRECORDSTRUCTURE = DESCRIPTOR.message_types_by_name['SenderKeyRecordStructure']
SessionStructure = _reflection.GeneratedProtocolMessageType('SessionStructure', (_message.Message,), {

  'Chain' : _reflection.GeneratedProtocolMessageType('Chain', (_message.Message,), {

    'ChainKey' : _reflection.GeneratedProtocolMessageType('ChainKey', (_message.Message,), {
      'DESCRIPTOR' : _SESSIONSTRUCTURE_CHAIN_CHAINKEY,
      '__module__' : 'storage_pb2'
      # @@protoc_insertion_point(class_scope:signal.proto.storage.SessionStructure.Chain.ChainKey)
      })
    ,

    'MessageKey' : _reflection.GeneratedProtocolMessageType('MessageKey', (_message.Message,), {
      'DESCRIPTOR' : _SESSIONSTRUCTURE_CHAIN_MESSAGEKEY,
      '__module__' : 'storage_pb2'
      # @@protoc_insertion_point(class_scope:signal.proto.storage.SessionStructure.Chain.MessageKey)
      })
    ,
    'DESCRIPTOR' : _SESSIONSTRUCTURE_CHAIN,
    '__module__' : 'storage_pb2'
    # @@protoc_insertion_point(class_scope:signal.proto.storage.SessionStructure.Chain)
    })
  ,

  'PendingPreKey' : _reflection.GeneratedProtocolMessageType('PendingPreKey', (_message.Message,), {
    'DESCRIPTOR' : _SESSIONSTRUCTURE_PENDINGPREKEY,
    '__module__' : 'storage_pb2'
    # @@protoc_insertion_point(class_scope:signal.proto.storage.SessionStructure.PendingPreKey)
    })
  ,
  'DESCRIPTOR' : _SESSIONSTRUCTURE,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:signal.proto.storage.SessionStructure)
  })
_sym_db.RegisterMessage(SessionStructure)
_sym_db.RegisterMessage(SessionStructure.Chain)
_sym_db.RegisterMessage(SessionStructure.Chain.ChainKey)
_sym_db.RegisterMessage(SessionStructure.Chain.MessageKey)
_sym_db.RegisterMessage(SessionStructure.PendingPreKey)

RecordStructure = _reflection.GeneratedProtocolMessageType('RecordStructure', (_message.Message,), {
  'DESCRIPTOR' : _RECORDSTRUCTURE,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:signal.proto.storage.RecordStructure)
  })
_sym_db.RegisterMessage(RecordStructure)

PreKeyRecordStructure = _reflection.GeneratedProtocolMessageType('PreKeyRecordStructure', (_message.Message,), {
  'DESCRIPTOR' : _PREKEYRECORDSTRUCTURE,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:signal.proto.storage.PreKeyRecordStructure)
  })
_sym_db.RegisterMessage(PreKeyRecordStructure)

SignedPreKeyRecordStructure = _reflection.GeneratedProtocolMessageType('SignedPreKeyRecordStructure', (_message.Message,), {
  'DESCRIPTOR' : _SIGNEDPREKEYRECORDSTRUCTURE,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:signal.proto.storage.SignedPreKeyRecordStructure)
  })
_sym_db.RegisterMessage(SignedPreKeyRecordStructure)

IdentityKeyPairStructure = _reflection.GeneratedProtocolMessageType('IdentityKeyPairStructure', (_message.Message,), {
  'DESCRIPTOR' : _IDENTITYKEYPAIRSTRUCTURE,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:signal.proto.storage.IdentityKeyPairStructure)
  })
_sym_db.RegisterMessage(IdentityKeyPairStructure)

SenderKeyStateStructure = _reflection.GeneratedProtocolMessageType('SenderKeyStateStructure', (_message.Message,), {

  'SenderChainKey' : _reflection.GeneratedProtocolMessageType('SenderChainKey', (_message.Message,), {
    'DESCRIPTOR' : _SENDERKEYSTATESTRUCTURE_SENDERCHAINKEY,
    '__module__' : 'storage_pb2'
    # @@protoc_insertion_point(class_scope:signal.proto.storage.SenderKeyStateStructure.SenderChainKey)
    })
  ,

  'SenderMessageKey' : _reflection.GeneratedProtocolMessageType('SenderMessageKey', (_message.Message,), {
    'DESCRIPTOR' : _SENDERKEYSTATESTRUCTURE_SENDERMESSAGEKEY,
    '__module__' : 'storage_pb2'
    # @@protoc_insertion_point(class_scope:signal.proto.storage.SenderKeyStateStructure.SenderMessageKey)
    })
  ,

  'SenderSigningKey' : _reflection.GeneratedProtocolMessageType('SenderSigningKey', (_message.Message,), {
    'DESCRIPTOR' : _SENDERKEYSTATESTRUCTURE_SENDERSIGNINGKEY,
    '__module__' : 'storage_pb2'
    # @@protoc_insertion_point(class_scope:signal.proto.storage.SenderKeyStateStructure.SenderSigningKey)
    })
  ,
  'DESCRIPTOR' : _SENDERKEYSTATESTRUCTURE,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:signal.proto.storage.SenderKeyStateStructure)
  })
_sym_db.RegisterMessage(SenderKeyStateStructure)
_sym_db.RegisterMessage(SenderKeyStateStructure.SenderChainKey)
_sym_db.RegisterMessage(SenderKeyStateStructure.SenderMessageKey)
_sym_db.RegisterMessage(SenderKeyStateStructure.SenderSigningKey)

SenderKeyRecordStructure = _reflection.GeneratedProtocolMessageType('SenderKeyRecordStructure', (_message.Message,), {
  'DESCRIPTOR' : _SENDERKEYRECORDSTRUCTURE,
  '__module__' : 'storage_pb2'
  # @@protoc_insertion_point(class_scope:signal.proto.storage.SenderKeyRecordStructure)
  })
_sym_db.RegisterMessage(SenderKeyRecordStructure)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SESSIONSTRUCTURE._serialized_start=40
  _SESSIONSTRUCTURE._serialized_end=928
  _SESSIONSTRUCTURE_CHAIN._serialized_start=498
  _SESSIONSTRUCTURE_CHAIN._serialized_end=840
  _SESSIONSTRUCTURE_CHAIN_CHAINKEY._serialized_start=724
  _SESSIONSTRUCTURE_CHAIN_CHAINKEY._serialized_end=762
  _SESSIONSTRUCTURE_CHAIN_MESSAGEKEY._serialized_start=764
  _SESSIONSTRUCTURE_CHAIN_MESSAGEKEY._serialized_end=840
  _SESSIONSTRUCTURE_PENDINGPREKEY._serialized_start=842
  _SESSIONSTRUCTURE_PENDINGPREKEY._serialized_end=922
  _RECORDSTRUCTURE._serialized_start=930
  _RECORDSTRUCTURE._serialized_end=1039
  _PREKEYRECORDSTRUCTURE._serialized_start=1041
  _PREKEYRECORDSTRUCTURE._serialized_end=1117
  _SIGNEDPREKEYRECORDSTRUCTURE._serialized_start=1119
  _SIGNEDPREKEYRECORDSTRUCTURE._serialized_end=1239
  _IDENTITYKEYPAIRSTRUCTURE._serialized_start=1241
  _IDENTITYKEYPAIRSTRUCTURE._serialized_end=1308
  _SENDERKEYSTATESTRUCTURE._serialized_start=1311
  _SENDERKEYSTATESTRUCTURE._serialized_end=1809
  _SENDERKEYSTATESTRUCTURE_SENDERCHAINKEY._serialized_start=1654
  _SENDERKEYSTATESTRUCTURE_SENDERCHAINKEY._serialized_end=1703
  _SENDERKEYSTATESTRUCTURE_SENDERMESSAGEKEY._serialized_start=1705
  _SENDERKEYSTATESTRUCTURE_SENDERMESSAGEKEY._serialized_end=1756
  _SENDERKEYSTATESTRUCTURE_SENDERSIGNINGKEY._serialized_start=1758
  _SENDERKEYSTATESTRUCTURE_SENDERSIGNINGKEY._serialized_end=1809
  _SENDERKEYRECORDSTRUCTURE._serialized_start=1811
  _SENDERKEYRECORDSTRUCTURE._serialized_end=1911
# @@protoc_insertion_point(module_scope)
